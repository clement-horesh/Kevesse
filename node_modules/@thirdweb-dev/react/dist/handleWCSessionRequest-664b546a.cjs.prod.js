'use strict';

var reactCore = require('@thirdweb-dev/react-core');
var React = require('react');
var coinbaseWallet = require('./headlessConnectUI-57dcd808.cjs.prod.js');
var jsxRuntime = require('react/jsx-runtime');

const WCOpenURI = _ref => {
  let {
    onBack,
    onConnected,
    walletConfig,
    appUriPrefix,
    supportLink,
    hideBackButton
  } = _ref;
  const createInstance = reactCore.useCreateWalletInstance();
  const {
    setConnectedWallet,
    chainToConnect,
    setConnectionStatus
  } = reactCore.useWalletContext();
  const connectStarted = React.useRef(false);
  React.useEffect(() => {
    if (connectStarted.current) {
      return;
    }
    connectStarted.current = true;
    const wallet = createInstance(walletConfig);
    setConnectionStatus("connecting");
    wallet.connectWithQrCode({
      chainId: chainToConnect?.chainId,
      onQrCodeUri(uri) {
        if (coinbaseWallet.isAndroid()) {
          coinbaseWallet.openWindow(`${appUriPrefix.android}wc?uri=${encodeURIComponent(uri)}`);
        } else if (coinbaseWallet.isIOS()) {
          coinbaseWallet.openWindow(`${appUriPrefix.ios}wc?uri=${encodeURIComponent(uri)}`);
        } else {
          coinbaseWallet.openWindow(`${appUriPrefix.other}wc?uri=${encodeURIComponent(uri)}`);
        }
      },
      onConnected() {
        setConnectedWallet(wallet);
        onConnected();
      }
    });
  }, [createInstance, setConnectedWallet, chainToConnect, onConnected, walletConfig, setConnectionStatus, appUriPrefix]);
  return /*#__PURE__*/jsxRuntime.jsx(coinbaseWallet.ConnectingScreen, {
    hideBackButton: hideBackButton,
    onBack: onBack,
    walletName: walletConfig.meta.name,
    walletIconURL: walletConfig.meta.iconURL,
    supportLink: supportLink
  });
};

function handelWCSessionRequest(wallet, uris) {
  if (coinbaseWallet.isMobile()) {
    wallet.on("wc_session_request_sent", () => {
      if (coinbaseWallet.isAndroid()) {
        coinbaseWallet.openWindow(uris.android);
      } else if (coinbaseWallet.isIOS()) {
        coinbaseWallet.openWindow(uris.ios);
      } else {
        coinbaseWallet.openWindow(uris.other);
      }
    });
  }
}

exports.WCOpenURI = WCOpenURI;
exports.handelWCSessionRequest = handelWCSessionRequest;
